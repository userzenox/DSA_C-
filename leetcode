// class Solution {
// public:
//     int maxAscendingSum(vector<int>& nums) {
//          int count=0, sum =0, maxsum=0, max = -1;
//          for(int i =1;i<nums.size(); i++){

//             if(nums[i-1] < nums[i]){
//                 count++;
                
//                 sum = sum + nums[i-1];
                

//             }
//             else{
//                      if(count > max){
//                          max = count ;
//                          maxsum = sum;
//                          sum =0 ;
//                          count = 0;
//                      }
//             }
//          }
//          return maxsum;
//     }
// };


// 1790. Check if One String Swap Can Make Strings Equal

// class Solution {
// public:
//     bool areAlmostEqual(string s1, string s2) {
//         int n = s1.size();
//         if (s1 == s2) {
//             return true;
//         }
//         for (int i = 0; i < n; i++) {
//             // Swap ith character with each next character
//             int j = (i + 1) % n;
//             swap(s1[i], s1[j]);
//             if (s1 == s2) {
//                 return true;
//             }
//             // Swap back to revert the change
//             swap(s1[i], s1[j]);
//         }
//         return false;
//     }
// };
